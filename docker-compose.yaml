version: '3'

services:
  fluentd:
    build:
      context: .
      dockerfile: Dockerfile-fluentd
    image: fluentdlocal:latest
    depends_on:
      - elasticsearch
    volumes:
      - ./fluent.conf:/fluentd/etc/fluent.conf
    networks:
      - mynetwork
    ports:
      - "24224:24224"
    command: ["fluentd", "-c", "/fluentd/etc/fluent.conf"]

  nginx:
    image: nginx:latest
    ports:
      - "80:80"
    depends_on:
      - fluentd
    logging:
      driver: fluentd
      options:
        fluentd-address: "localhost:24224"
        tag: docker.nginx
    networks:
      - mynetwork

  flask_app:
    build:
      context: .
      dockerfile: Dockerfile
    image: web-app:latest
    ports:
      - 5000
    depends_on:
      - fluentd
    logging:
      driver: fluentd
      options:
        fluentd-address: "localhost:24224"
        tag: docker.flask_app
    networks:
      - mynetwork
    deploy:
      replicas: 3 
  
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.15.2
    environment:
      - discovery.type=single-node
    ports:
      - "9200:9200"
    networks:
      - mynetwork
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9200"]
      interval: 30s
      timeout: 10s
      retries: 5

  kibana:
    image: docker.elastic.co/kibana/kibana:7.15.2
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    ports:
      - "5601:5601"
    networks:
      - mynetwork
    depends_on:
      - elasticsearch
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5601"]
      interval: 30s
      timeout: 10s
      retries: 5

networks:
  mynetwork:
    driver: overlay

